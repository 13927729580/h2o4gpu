ICCFILE := $(shell command -v icpc 2> /dev/null)

ifdef ICCFILE
USEICC=1
else
USEICC=0
endif

ifdef MKLROOT
USEMKL=1
else
USEMKL=0
endif


$(warning USEICC is $(USEICC))
$(warning ICCFILE is $(ICCFILE))
$(warning USEMKL is $(USEMKL))



# User Vars
POGSROOT=../../src

# Example Files
EXSRC=lasso.cpp lasso_path.cpp  logistic.cpp  lp_eq.cpp  lp_ineq.cpp  nonneg_l2.cpp  svm.cpp
EXSRC2=elastic_net.cpp
EXSRC3=elastic_net_ptr_driver.cpp

GITHASH := $(shell git rev-parse --short HEAD 2> /dev/null)
HASH=-D_GITHASH_=\"$(GITHASH)\"

ifeq ($(USEICC),0) # assumes only gnu not pgi
#MKLSTUFF=-lmkl_def -lmkl_avx -lmkl_gf_lp64 -lmkl_gnu_thread -lmkl_core -liomp5 -lpthread
MKLSTUFF=-lmkl_def -lmkl_avx -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -liomp5 -lpthread
else
MKLSTUFF=-lmkl_def -lmkl_avx -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -liomp5 -lpthread
endif
ICCSTUFF=-qopenmp
GCCSTUFF=-fopenmp -ggdb3 -lgomp


# C++ Flags
ifeq ($(USEICC),0)
CXX=g++
ICCSTUFF=
else
CXX=icpc
GCCSTUFF=
endif

ifeq ($(USEMKL),0)
MKLSTUFF=-lm -lblas
endif

LINKFLAGS=$(ICCSTUFF) $(MKLSTUFF) $(GCCSTUFF)

DFLAGS=-DUSEICC=$(USEICC) -DUSEMKL=$(USEMKL) # -DUSE_NCCL  #-DUSE_NVTX=1 -DDEBUG

CXXFLAGS=$(IFLAGS) -g -O3 $(HASH) -I$(POGSROOT)/include  -std=c++11 -Wall -Wconversion -fPIC  $(LINKFLAGS) $(DFLAGS)

# Check System Args.
UNAME = $(shell uname -s)
ifeq ($(UNAME), Darwin)
LDFLAGS=-lm -framework Accelerate
endif


all: cpu cpualt cpuptr

default: cpualt cpuptr

# CPU
cpu: run_all_orig.cpp examples.h $(EXSRC) $(POGSROOT)/build/cpu/pogs.a Makefile.cpu Makefile
	$(CXX) $(CXXFLAGS) -o runcpu $(EXSRC) $<	$(POGSROOT)/build/cpu/pogs.a $(LINKFLAGS)

cpualt: run_all.cpp examples.h $(EXSRC2) $(POGSROOT)/build/cpu/pogs.a Makefile.cpu Makefile
	$(CXX) $(CXXFLAGS) -o h2oai-glm-cpu $(EXSRC2)  $<	$(POGSROOT)/build/cpu/pogs.a $(LINKFLAGS)

cpuptr: run_all.cpp examples.h $(EXSRC3) $(POGSROOT)/build/cpu/pogs.a Makefile.cpu Makefile
	$(CXX) $(CXXFLAGS) -o h2oai-glm-cpu-ptr $(EXSRC3)  $<	$(POGSROOT)/build/cpu/pogs.a $(LINKFLAGS)

clean:
	rm -f *.o *~ *~ runcpu h2oai-glm-cpu h2oai-glm-cpu-ptr
	rm -rf *.dSYM

