USEICC=0
USEMKL=0

# User Vars
POGSROOT=../../src

# Example Files
EXSRC=lasso.cpp lasso_path.cpp  logistic.cpp  lp_eq.cpp  lp_ineq.cpp  nonneg_l2.cpp  svm.cpp
EXSRC2=elastic_net.cpp
EXSRC3=elastic_net_mapd.cpp

GITHASH := $(shell git rev-parse --short HEAD 2> /dev/null)
HASH=-D_GITHASH_=\"$(GITHASH)\"

MKLSTUFF=-lmkl_gf_lp64 -lmkl_gnu_thread -lmkl_core -liomp5 -lpthread
ICCSTUFF=-qopenmp
GCCSTUFF=-fopenmp


# C++ Flags
ifeq ($(USEICC),0)
CXX=g++
ICCSTUFF=
else
CXX=icpc
GCCSTUFF=
endif

ifeq ($(USEMKL),0)
MKLSTUFF=
endif

LINKFLAGS=$(ICCSTUFF) $(MKLSTUFF) $(GCCSTUFF)

CXXFLAGS=$(IFLAGS) -g -O3 $(HASH) -I$(POGSROOT)/include  -std=c++11 -Wall -Wconversion -fPIC  $(LINKFLAGS) #-DUSE_NCCL=1 #-DDEBUG  #-DDEBUG


# CUDA Flags
CUDA_LIB=$(CUDA_HOME)/lib64
CULDFLAGS_=-lcudart -lcublas -lcusparse -lrt -I$(CUDA_HOME)/include $(LINKFLAGS)  -lcuda -lcurand -lnvToolsExt -DUSE_NVTX=1 -DCUDCHECKERR -DDEBUG # -lnccl -DUSE_NCCL=1 #  

# Check System Args.
UNAME = $(shell uname -s)
ifeq ($(UNAME), Darwin)
CULDFLAGS=-L/usr/local/cuda/lib -L/usr/local/lib $(CULDFLAGS_)
else
CULDFLAGS=-L/usr/local/cuda/lib64 $(CULDFLAGS_)
endif



all: gpu gpualt gpumapd

default: gpualt gpumapd

# GPU
gpu: run_all_orig.cpp examples.h $(EXSRC) Makefile.gpu Makefile $(POGSROOT)/build/gpu/pogs.a
	$(CXX) -DHAVECUDA $(CXXFLAGS) -o rungpu $(EXSRC) $<	$(POGSROOT)/build/gpu/pogs.a  $(CULDFLAGS)

gpualt: run_all.cpp examples.h $(EXSRC2) Makefile.gpu Makefile $(POGSROOT)/build/gpu/pogs.a
	$(CXX) -DHAVECUDA $(CXXFLAGS) -o h2oai-glm-gpu $(EXSRC2)  $<	$(POGSROOT)/build/gpu/pogs.a $(CULDFLAGS)

gpumapd: run_all.cpp examples.h $(EXSRC3) Makefile.gpu Makefile $(POGSROOT)/build/gpu/pogs.a
	$(CXX) -DHAVECUDA $(CXXFLAGS) -o h2oai-glm-gpu-mapd $(EXSRC3)  $<	$(POGSROOT)/build/gpu/pogs.a $(CULDFLAGS)

run: gpumapd
	./h2oai-glm-gpu-mapd 1 100 1 1 0
	#./h2oai-glm-gpu-mapd 1 100 1 0 0

clean:
	rm -f *.o *~ *~ rungpu h2oai-glm-gpu h2oai-glm-gpu-mapd
	rm -rf *.dSYM

