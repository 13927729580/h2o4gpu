include ../../src/config2.mk



# User Vars
H2OAIGLMROOT=../../src

# Example Files
EXSRC=lasso.cpp lasso_path.cpp  logistic.cpp  lp_eq.cpp  lp_ineq.cpp  nonneg_l2.cpp  svm.cpp
EXSRC2=elastic_net.cpp
EXSRC3=elastic_net_ptr_driver.cpp

GITHASH := $(shell git rev-parse --short HEAD 2> /dev/null)
HASH=-D_GITHASH_=\"$(GITHASH)\"


ifeq ($(USEICC),0) # assumes only gnu not pgi
#MKLSTUFF=-lmkl_def -lmkl_avx -lmkl_gf_lp64 -lmkl_gnu_thread -lmkl_core -liomp5 -lpthread
MKLSTUFF=-lmkl_def -lmkl_avx -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -liomp5 -lpthread
else
MKLSTUFF=-lmkl_def -lmkl_avx -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -liomp5 -lpthread
endif

ICCSTUFF=-qopenmp
GCCSTUFF=-fopenmp -ggdb3  -lgomp


# C++ Flags
ifeq ($(USEICC),0)
CXX=g++
ICCSTUFF=
else
CXX=icpc
GCCSTUFF=
endif

ifeq ($(USEMKL),0)
MKLSTUFF=-lm # -lblas#using GPU instead for blas
endif

LINKFLAGS=$(ICCSTUFF) $(MKLSTUFF) $(GCCSTUFF)


DFLAGS=-DUSEICC=$(USEICC) -DUSEMKL=$(USEMKL)
ifeq ($(USEDEBUG),1)
DFLAGS+=-DDEBUG
endif
ifeq ($(USENCCL),1)
DFLAGS+=-DUSE_NCCL
endif
ifeq ($(USENVTX),1)
DFLAGS+=-DUSE_NVTX=1
endif


CUDFLAGS=$(DFLAGS) -DHAVECUDA -DCUDCHECKERR

CXXFLAGS=$(IFLAGS) -g -O3 $(HASH) -I$(H2OAIGLMROOT)/include  -std=c++11 -Wall -Wconversion -fPIC  $(LINKFLAGS) $(CUDFLAGS)


# CUDA Flags
CUDA_LIB=$(CUDA_HOME)/lib64
CULDFLAGS_=-lcudart -lcublas -lcusparse -lrt -I$(CUDA_HOME)/include $(LINKFLAGS)  -lcuda -lcurand $(CUDFLAGS) -lnvToolsExt  #  -lnccl
ifeq ($(USENVTX),1)
CULDFLAGS_+=-lnvToolsExt
endif
ifeq ($(USENCCL),1)
CULDFLAGS_+=-lnccl
endif


# Check System Args.
UNAME = $(shell uname -s)
ifeq ($(UNAME), Darwin)
CULDFLAGS=-L/usr/local/cuda/lib -L/usr/local/lib $(CULDFLAGS_)
else
CULDFLAGS=-L/usr/local/cuda/lib64 $(CULDFLAGS_)
endif



all: gpu gpualt gpuptr

default: gpualt gpuptr

# GPU
gpu: run_all_orig.cpp examples.h $(EXSRC) Makefile.gpu Makefile $(H2OAIGLMROOT)/build/gpu/h2oaiglm.a
	$(CXX) $(CXXFLAGS) -o rungpu $(EXSRC) $<	$(H2OAIGLMROOT)/build/gpu/h2oaiglm.a  $(CULDFLAGS)

gpualt: run_all.cpp examples.h $(EXSRC2) Makefile.gpu Makefile $(H2OAIGLMROOT)/build/gpu/h2oaiglm.a
	$(CXX) $(CXXFLAGS) -o h2oai-glm-gpu $(EXSRC2)  $<	$(H2OAIGLMROOT)/build/gpu/h2oaiglm.a $(CULDFLAGS)

gpuptr: run_all.cpp examples.h $(EXSRC3) Makefile.gpu Makefile $(H2OAIGLMROOT)/build/gpu/h2oaiglm.a
	$(CXX) $(CXXFLAGS) -o h2oai-glm-gpu-ptr $(EXSRC3)  $<	$(H2OAIGLMROOT)/build/gpu/h2oaiglm.a $(CULDFLAGS)

run: gpuptr
	./h2oai-glm-gpu-ptr 1 100 1 1 0
	#./h2oai-glm-gpu-ptr 1 100 1 0 0

clean:
	rm -f *.o *~ *~ rungpu h2oai-glm-gpu h2oai-glm-gpu-ptr
	rm -rf *.dSYM

